name: Haskell CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  id-token: write
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Restore GHC cache
      - name: Restore GHC cache
        uses: actions/cache@v4
        with:
          path: ~/.ghcup
          key: ${{ runner.os }}-ghc-${{ matrix.ghc }}
          restore-keys: ${{ runner.os }}-ghc-

      # Step 3: Set up Haskell environment
      - name: Set up Haskell
        uses: haskell-actions/setup@v2
        with:
          ghc-version: '9.4.8' # Adjust GHC version as needed
          # cabal-version: '3.2' # Uncomment if Cabal version management is required

      # Step 4: Restore Cabal cache
      - name: Cache ~/.cabal/packages, ~/.cabal/store, and dist-newstyle
        uses: actions/cache@v4
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-cabal-${{ hashFiles('**/*.cabal', '**/cabal.project', '**/cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-cabal-

      # Step 5: Build project and dependencies
      - name: Build project
        run: cabal build --enable-tests --enable-benchmarks all

      # Step 6: Build documentation
      - name: Build documentation
        run: cabal exec site rebuild

      # Step 7: Configure GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5.0.0

      # Step 8: Upload artifacts
      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v3.0.1
        with: 
          path: '_site/'

      # Step 9: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
